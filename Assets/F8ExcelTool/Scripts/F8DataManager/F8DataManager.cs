/*
 *   This file was generated by a tool.
 *   Do not edit it, otherwise the changes will be overwritten.
 */

using System;
using System.Collections.Generic;
using UnityEngine;
using System.Runtime.Serialization;
using System.Runtime.Serialization.Formatters.Binary;
using System.IO;
using F8ExcelDataClass;
using F8Framework.Core;
[Serializable]
public class F8DataManager : Singleton<F8DataManager>
{
	private Sheet1 p_Sheet1;
	private Sheet2 p_Sheet2;

	public Sheet1Item GetSheet1ByID(Int32 id)
	{
		Sheet1Item t = null;
		p_Sheet1.Dict.TryGetValue(id, out t);
		if (t == null) Debug.LogError("can't find the id " + id + " in Sheet1");
		return t;
	}

	public Dictionary<int, Sheet1Item> GetSheet1()
	{
		return p_Sheet1.Dict;
	}

	public Sheet2Item GetSheet2ByID(Int32 id)
	{
		Sheet2Item t = null;
		p_Sheet2.Dict.TryGetValue(id, out t);
		if (t == null) Debug.LogError("can't find the id " + id + " in Sheet2");
		return t;
	}

	public Dictionary<int, Sheet2Item> GetSheet2()
	{
		return p_Sheet2.Dict;
	}

	public void LoadAll()
	{
		p_Sheet1 = Load("Sheet1") as Sheet1;
		p_Sheet2 = Load("Sheet2") as Sheet2;
	}

	public void RuntimeLoadAll(Dictionary<String, System.Object> objs)
	{
		p_Sheet1 = objs["Sheet1"] as Sheet1;
		p_Sheet2 = objs["Sheet2"] as Sheet2;
	}

	private System.Object Load(string name)
	{
		IFormatter f = new BinaryFormatter();
		TextAsset text = Resources.Load<TextAsset>("BinConfigData/" + name);
		Stream s = new MemoryStream(text.bytes);
		System.Object obj = f.Deserialize(s);
		s.Close();
		return obj;
	}
}

